name: "BCRS CD action"
author: "Patrick Wei"
description: "CD for BCRS projects"
inputs:
  WORKING_DIRECTORY:
    description: "The application directory"
    required: true
  APP_NAME:
    description: "The application name"
    required: true
  VAULTS:
    description: "The 1password vaults"
    required: true
  SKIP_OP:
    description: "Skip running 1password script"
    required: true
    default: "false"
  OP_PARAMETERS:
    description: "The 1password script parameters"
    required: true
  OPENSHIFT_LOGIN_REGISTRY:
    description: "The openshift registry"
    required: true
  OPENSHIFT_DOCKER_REGISTRY:
    description: "The openshift docker registry"
    required: true
  OPENSHIFT_SA_NAME:
    description: "The openshift service account name"
    required: true
  OPENSHIFT_SA_TOKEN:
    description: "The openshift service account token"
    required: true
  OPENSHIFT_REPOSITORY:
    description: "The openshift repository"
    required: true
  OPENSHIFT_REPOSITORY_DEPLOYMENT:
    description: "The openshift repository from deployment"
    required: false
    default: "${{inputs.OPENSHIFT_REPOSITORY}}"

runs:
  using: "composite"
  steps:
    - name: Build image
      shell: bash
      working-directory: ${{inputs.WORKING_DIRECTORY}}
      run: |
        docker build . --file Dockerfile --tag image

    - name: Install tools (1password)
      shell: bash
      run: |
        ${{ github.action_path }}/scripts/install_tools.sh
        oc version
        op --version

    - name: Login Openshift
      shell: bash
      run: |
        oc login ${{inputs.OPENSHIFT_LOGIN_REGISTRY}} --token=${{inputs.OPENSHIFT_SA_TOKEN}}

    - name: Set Deployment Environement Variables
      shell: bash
      run: |
        echo "Update Envs"
        ${{ github.action_path }}/scripts/1pass.sh ${{inputs.OP_PARAMETERS}} -s "${{inputs.SKIP_OP}}" -m "secret" -e "${TAG_NAME}" -v "${{inputs.VAULTS}}" -a "${{inputs.APP_NAME}}-${TAG_NAME}" -n "${{inputs.OPENSHIFT_REPOSITORY}}-${TAG_NAME}"

    - name: Push image
      shell: bash
      run: |
        echo "${{inputs.OPENSHIFT_SA_TOKEN}}" | docker login ${{inputs.OPENSHIFT_DOCKER_REGISTRY}} -u ${{inputs.OPENSHIFT_SA_NAME}} --password-stdin
        IMAGE_ID=${{inputs.OPENSHIFT_DOCKER_REGISTRY}}/${{inputs.OPENSHIFT_REPOSITORY}}-tools/${{inputs.APP_NAME}}
        docker tag image $IMAGE_ID:latest
        docker push $IMAGE_ID:latest
        docker image tag $IMAGE_ID:latest $IMAGE_ID:$TAG_NAME
        docker push $IMAGE_ID:$TAG_NAME

    - name: Watch new rollout (trigger by image change in Openshift)
      shell: bash
      run: |
        oc rollout status dc/${{inputs.APP_NAME}}-${TAG_NAME} -n ${{inputs.OPENSHIFT_REPOSITORY_DEPLOYMENT}}-${TAG_NAME} -w
